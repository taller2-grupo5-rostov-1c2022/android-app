name: Pipeline

env:
  BUILD_PATH: android/app/build/outputs/apk/release

on:
  push:
    branches: ["**"]
    tags: ["*", "**"]
    paths-ignore: ["**.md", ".github/**"]
  # pull_request: # Trigger on pull request
  #   branches: [master]
  #   paths-ignore: ["**.md", ".github/**"]
  #   types: [opened, synchronize]
  workflow_dispatch: # Allows manual run

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Install:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: "17"
      - name: Install Dependencies
        run: npm ci

  Lint:
    needs: Install
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: "17"
      - name: Install Dependencies
        run: npm ci
      - name: Run Linter
        run: npm run lint

  # Test:
  #   runs-on: ubuntu-18.04
  #   needs: Install
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install Node
  #       uses: actions/setup-node@v3
  #       with:
  #         cache: npm
  #         node-version: "17"
  #     - name: Install Dependencies
  #       run: npm ci
  #     - name: Run Tests
  #       run: npm run test:coverage

  Build:
    needs: Install
    if: >
      (github.event_name == 'push' &&
        (github.ref == 'refs/heads/master' ||
          startsWith(github.ref, 'refs/tags/v'))) ||
      github.event_name == 'workflow_dispatch' ||
      github.run_attempt != '1'
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - name: Build Android Release
        run: >
          echo "Event: ${{github.event_name}}";
          echo "Ref: ${{github.ref}}";
          echo "Attempt: ${{github.run_attempt}}";
          (cd android && ./gradlew clean assembleRelease) &&
          cd $BUILD_PATH && mv app-release.apk spotifiuby.apk
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: spotifiuby.apk
          path: ${{ env.BUILD_PATH }}
      - name: Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.BUILD_PATH }}/spotifiuby.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
